/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gfacture.view;

import gfacture.dao.ClientDAO;
import gfacture.dao.CommandeDAO;
import gfacture.dao.Ligne_cmdDAO;
import gfacture.dao.ProduitDAO;
import gfacture.model.Client;
import gfacture.model.Commande;
import gfacture.model.Ligne_cmd;
import gfacture.model.Produit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ussf
 */
public class GCommandsClient extends javax.swing.JFrame {

    /**
     * Creates new form GCommandsClient
     */
    ArrayList<Client> clients;
    ArrayList<Commande> commands;
    ArrayList<Ligne_cmd> ligns_cmd;
    ArrayList<Produit> produits;
    public GCommandsClient() throws SQLException {
        clients=(ArrayList<Client>)new ClientDAO().getall();
        commands=(ArrayList<Commande>)new CommandeDAO().getall();
        produits=(ArrayList<Produit>) new ProduitDAO().getall();
        ligns_cmd=new ArrayList<Ligne_cmd>();
        //ligns_cmd=(ArrayList<Ligne_cmd>) new Ligne_cmdDAO().getall();
        initComponents();
        
    }
    
    private void getClientsNom() {
        Iterator<Client> it; //TODO: handle exception
        it = clients.iterator();
        Client client;
        while(it.hasNext() ) {
            client=it.next();
            jComboBox1.addItem(client.getNom());
        }
    }
    
    private void getListCommand() {
        Iterator<Commande> it=commands.iterator();
        Commande cmd;
        String id_cmd;
        while(it.hasNext()) {
            cmd=it.next();
            id_cmd=String.valueOf(cmd.getId_cmd());
            jComboBox2.addItem(id_cmd);
        }
    }
    
    private void getListProduit() {
        Iterator<Produit> it=produits.iterator();
        String nom_produit;
            while(it.hasNext()) {
            nom_produit=it.next().getNom();
            jComboBox4.addItem(nom_produit);
            }
    }
    private void remplirTable() {
        removeAllTable();
        DefaultTableModel tblModel1=(DefaultTableModel)jTable1.getModel();
        String data[]=new String [6];
        Commande cmd;
        String id_ligne,id_cmd,id_client,nom_produit,prix,quantite;
        Iterator<Commande> it=commands.iterator();
        Ligne_cmd ligne;
        Produit prd;
        while(it.hasNext()) {
            cmd=it.next();
            id_cmd=String.valueOf( cmd.getId_cmd() );
            id_client=String.valueOf( cmd.getIdClient() );
            ligns_cmd=(ArrayList<Ligne_cmd>) cmd.getLsitLigneCmd();
            Iterator<Ligne_cmd> it_lign=ligns_cmd.iterator();
            while( it_lign.hasNext() ) {
                ligne=it_lign.next();
                    id_ligne=String.valueOf(ligne.getId_ligne_cmd());
                    quantite=String.valueOf( ligne.getQte() );
                    prd=ligne.getProduit();
                    nom_produit=prd.getNom();
                    prix=String.valueOf( prd.getPrixu() );
                    data[0]=id_ligne;
                    data[1]=id_cmd;
                    data[2]=id_client;
                    data[3]=nom_produit;
                    data[4]=prix;
                    data[5]=quantite;
                    tblModel1.addRow(data);
                
            }
        }
    }
    
     private void removeAllTable() {
        DefaultTableModel tblModel1=(DefaultTableModel)jTable1.getModel();
        int taile=jTable1.getRowCount();
        for(int i=0;i<taile;i++) {
            tblModel1.removeRow(0);
        }
    }
     private void getLignes_cmd() {
         int index=jComboBox2.getSelectedIndex();
         if(index!=0) {
             try {
                 commands=(ArrayList<Commande>)new CommandeDAO().getall();
                  } catch (Exception e) {
   //TODO: handle exception
                    }
             Commande cmd=commands.get(index-1);
             ligns_cmd=(ArrayList<Ligne_cmd>) cmd.getLsitLigneCmd();
             Iterator<Ligne_cmd> it=ligns_cmd.iterator();
             Ligne_cmd ligne;
             jComboBox3.removeAllItems();
             jComboBox3.addItem("id ligne cmd");
             while(it.hasNext()) {
                 ligne=it.next();
                 jComboBox3.addItem(""+ligne.getId_ligne_cmd());
             }
         }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    /****==========get client jcombox   */

    /****===========get  command tableau jcombox  */

    /****===========get lign command tableau */

    /****===========get lign command jcombox */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jLabel1.setText("choisir Client");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "choisir clients" }));
        /*** */
        getClientsNom();
        /**** */
        jComboBox1.setToolTipText("");

        

        jComboBox1.addItemListener(new ItemListener() {
            // Listening if a new items of the combo box has been selected.
            public void itemStateChanged(ItemEvent event) {
                JComboBox comboBox = (JComboBox) event.getSource();
                // The item affected by the event.
                Object item = event.getItem();
                if (event.getStateChange() == ItemEvent.SELECTED) {
                    jLabel6.setText( " commande client ."+jComboBox1.getSelectedItem().toString() );
                    int index=jComboBox1.getSelectedIndex();
                    int id_client=-1;
                    if(index!=0) id_client=clients.get(index-1).getId_client();
                    ArrayList<Commande> ncommands=new ArrayList<Commande>();
                    Commande commande;
                    try {
                        commands=(ArrayList<Commande>)new CommandeDAO().getall();
                    } catch (Exception e) {
                        //TODO: handle exception
                    }
                    if(index!=0) {
                        Iterator<Commande> it=commands.iterator();
                        while(it.hasNext()) {
                            commande=it.next();
                            if(commande.getIdClient()==id_client) ncommands.add(commande);
                        }
                        commands=ncommands;
                    }
                    
                    remplirTable();
                }
            }
        });

        jComboBox2.addItemListener(new ItemListener() {
            // Listening if a new items of the combo box has been selected.
            public void itemStateChanged(ItemEvent event) {
                JComboBox comboBox = (JComboBox) event.getSource();

                // The item affected by the event.
                Object item = event.getItem();

                if (event.getStateChange() == ItemEvent.SELECTED) {
                    jLabel6.setText( " GOOD selected client.");
                    int index=jComboBox2.getSelectedIndex();
                    try {
                        commands=(ArrayList<Commande>)new CommandeDAO().getall();
                    } catch(Exception e) {

                    }
                    int id_cmd=-1;
                    if(index!=0)  id_cmd=commands.get(index-1).getId_cmd();
                    ArrayList<Commande> ncommands=new ArrayList<Commande>();
                    Commande commande;
                    Iterator<Commande> it=commands.iterator();
                    if(index!=0) {
                        while(it.hasNext()) {
                            commande=it.next();
                            if(commande.getId_cmd()==id_cmd) ncommands.add(commande);
                        }
                        commands=ncommands;
                        
                    }
                    remplirTable();
                    getLignes_cmd();
                }
            }
        });
        
        jComboBox3.addItemListener(new ItemListener() {
            // Listening if a new items of the combo box has been selected.
            public void itemStateChanged(ItemEvent event) {
                JComboBox comboBox = (JComboBox) event.getSource();

                // The item affected by the event.
                Object item = event.getItem();

                if (event.getStateChange() == ItemEvent.SELECTED) {
                    jLabel6.setText( " GOOD selected lign command.");
                    int index=jComboBox3.getSelectedIndex();
                    Ligne_cmd ligne;
                    if(index!=0) {
                    ligne=ligns_cmd.get(index-1);
                    removeAllTable();
                    String id_ligne,id_cmd,id_client,prix,nom,quantite;
                    id_ligne=String.valueOf( ligne.getId_ligne_cmd() );
                    id_cmd=String.valueOf( ligne.getCommande().getId_cmd() );
                    id_client=String.valueOf( ligne.getCommande().getIdClient() );
                    prix=String.valueOf( ligne.getProduit().getId_produit() );
                    nom=ligne.getProduit().getNom();
                    quantite=String.valueOf(ligne.getQte());
                    String data[]={id_ligne,id_cmd,id_client,nom,prix,quantite};
                    DefaultTableModel tblModel1=(DefaultTableModel)jTable1.getModel();
                    tblModel1.addRow(data);
                    }
                    
                }
            }
        });

        
        jLabel2.setText("choisir commande");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "choisir commande" }));
        getListCommand();
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
               "id_ligne_cmd","id_cmd", "id_client", "nom-pdouit", "prix", "quantite"
            }
        ));
       
        remplirTable();
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("id_lign_cmd");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "id_lign_cmd" }));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "choisi new produit " }));
        getListProduit();
        jLabel4.setText("choisir new  produit");

        jLabel5.setText("quantite");

        jButton1.setText("Upate lign_cmd");

        jLabel6.setText("tous les commandes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, 94, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(119, 119, 119)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, 1, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox3, 0, 95, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(95, 95, 95))
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
     
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        int index=jComboBox3.getSelectedIndex();
        if(index!=0) {
            Ligne_cmd ligne=ligns_cmd.get(index-1);
            //index produit choisir
            index=jComboBox4.getSelectedIndex();
            if(index!=0) {
                Produit prd=produits.get(index-1);
                int  quantite=Integer.parseInt(jTextField1.getText());
                ligne.setQte(quantite);
                ligne.setProduit(prd);
                try {
                    new Ligne_cmdDAO().update(ligne);
                    // set valeur dans tableau
                    DefaultTableModel tblModel1=(DefaultTableModel)jTable1.getModel();
                    String id_ligne,id_cmd,nom,prix,id_client;
                    id_ligne=String.valueOf( ligne.getId_ligne_cmd() );
                    id_cmd=String.valueOf( ligne.getCommande().getId_cmd() );
                    id_client=String.valueOf( ligne.getCommande().getIdClient() );
                    nom=ligne.getProduit().getNom();
                    prix=String.valueOf( ligne.getProduit().getPrixu() );
                    String data[]={id_ligne,id_cmd,id_client,nom,prix,String.valueOf(quantite)};
                    for(int i=0;i<6;i++) {
                        tblModel1.setValueAt(data[i],0,i);
                        
                    }
                    
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(GCommandsClient.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GCommandsClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GCommandsClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GCommandsClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GCommandsClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                   new GCommandsClient().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(GCommandsClient.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}


